/*global history */
sap.ui.define([
		"Dashboard/controller/BaseController"
	
	], function (BaseController) {

	"use strict";
	return BaseController.extend("Dashboard.controller.Master", {
		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf Dashboard.view.Master
		 */ //	onInit: function() {
		//
		//	},
		/**
		 * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
		 * (NOT before the first rendering! onInit() is used for that one!).
		 * @memberOf Dashboard.view.Master
		 */ //	onBeforeRendering: function() {
		//
		//	},
		/**
		 * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
		 * This hook is the same one that SAPUI5 controls get after being rendered.
		 * @memberOf Dashboard.view.Master
		 */ //	onAfterRendering: function() {
		//
		//	},
		/**
		 * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
		 * @memberOf Dashboard.view.Master
		 */ //	onExit: function() {
		//
		//	}
		/**
		 *@memberOf Dashboard.controller.Master
		 */
		onSelectionChange: function(oEvent) {
			//This code was generated by the layout editor.
			// Get the list item either from the listItem parameter or from the event's
			// source itself (will depend on the device-dependent mode)
			//this._showDetail(oEvent.getParameter("listItem") || oEvent.getSource());
				var oItem = oEvent.getParameter("listItem");
    	var oContext = oItem.getBindingContext();
    	alert(oContext);
    	//var sPath = oContext.getPath().substr(1);
				this.getRouter().navTo("detail", {
			Id : oContext.getProperty("Id")					//	tab: this.sTab
			}, false);
		},

		_showDetail: function(oItem) {
			// If we're on a phone device, include nav in history
			//var bReplace = sap.ui..device.is.phone ? false : true;
			this.getRouter().navTo("detail", {
				objid : oItem.getBindingContext().getProperty("jsonModel>Id")
					//	tab: this.sTab
			}, false);
			//this.getRouter().getTargets().display("object");
		}
	});
});